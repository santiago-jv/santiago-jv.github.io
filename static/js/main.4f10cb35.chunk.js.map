{"version":3,"sources":["assets/pokedex.png","components/ListaPokemones.js","App.js","index.js"],"names":["PokemonSugerido","pokemon","myOnClick","id","name","onClick","avatar","ListaPokemones","refBuscador","useRef","useState","pokemones","setPokemones","setPokemon","loading","setLoading","posiblesBusquedas","setPosiblesBusquedas","useEffect","a","url","pokemons","json_pokemones","next","fetch","res_pokemones","json","results","forEach","element","res_pokemon","json_pokemon","img","src","sprites","front_default","alt","poke","push","console","log","p","getPokemon","handleInput","nombre","current","value","pokemon_encontrado","i","length","pokemones_validos","e","valido","charAt","className","pokedex","placeholder","type","onChange","ref","sort","map","pokemon_seleccionado","cadena","primerCaracter","toUpperCase","restoDeLaCadena","substring","concat","primeraLetraMayuscula","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f10cb35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokedex.fd486486.png\";","import React, { useState, useEffect, Fragment, useRef } from \"react\";\r\nimport pokedex from '../assets/pokedex.png'\r\n\r\nconst ListaPokemones = () => {\r\n  let refBuscador = useRef()\r\n  const [pokemones, setPokemones] = useState([]);\r\n  const [pokemon, setPokemon] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [posiblesBusquedas, setPosiblesBusquedas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getPokemon = async () => {\r\n      let url = \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=100\";\r\n      let pokemons = [];\r\n      let json_pokemones = { next: 2 };\r\n      while (json_pokemones.next != null) {\r\n        try {\r\n          let res_pokemones = await fetch(url);\r\n          json_pokemones = await res_pokemones.json();\r\n          json_pokemones.results.forEach(async (element) => {\r\n            try {\r\n              let res_pokemon = await fetch(element.url),\r\n                json_pokemon = await res_pokemon.json();\r\n\r\n              let img = (\r\n                <img src={json_pokemon.sprites.front_default} alt=\"pokemon\" />\r\n              );\r\n              let poke = {\r\n                name: element.name,\r\n                avatar: img,\r\n              };\r\n              pokemons.push(poke);\r\n            } catch (error) {\r\n              console.log(\r\n                \"Caractrísticas del pokemón \" +\r\n                  element.name +\r\n                  \"  no encontrado en la PokeApi; 404 NOT FOUND\"\r\n              );\r\n            }\r\n          });\r\n\r\n          url = json_pokemones.next;\r\n\r\n          setPokemones((p) => pokemons);\r\n          if (json_pokemones.next == null) {\r\n            setLoading(false);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    };\r\n\r\n    getPokemon();\r\n  }, []);\r\n\r\n  const handleInput = () => {\r\n    let nombre = refBuscador.current.value\r\n    let pokemon_encontrado = false;\r\n\r\n    if (nombre !== \"\") {\r\n      for (let i = 0; i < pokemones.length; i++) {\r\n          if (pokemones[i].name === nombre) {\r\n            if(posiblesBusquedas.length === 1){\r\n              setPokemon(pokemones[i]);\r\n              setPosiblesBusquedas([])\r\n              pokemon_encontrado = true  \r\n            }\r\n            \r\n            if(posiblesBusquedas.length <  1){\r\n              setPosiblesBusquedas([])\r\n            }\r\n          \r\n            break;\r\n          }\r\n        }\r\n\r\n     if(!pokemon_encontrado){\r\n      let pokemones_validos = [];\r\n      pokemones.forEach((e) => {\r\n        let valido = true;\r\n       \r\n        for (let i = 0; i < nombre.length; i++) {\r\n          \r\n          if (nombre.charAt(i) !== e.name.charAt(i)) {   \r\n            valido = false;\r\n          }\r\n        }\r\n        if (valido) {\r\n          pokemones_validos.push(e);\r\n        }\r\n      });\r\n      setPosiblesBusquedas(pokemones_validos);\r\n     \r\n     }\r\n    } else {\r\n      setPosiblesBusquedas([]);\r\n      setPokemon(null);\r\n    }\r\n  };\r\n\r\n  const primeraLetraMayuscula = (cadena) => {\r\n    const primerCaracter = cadena.charAt(0).toUpperCase();\r\n    const restoDeLaCadena = cadena.substring(1, cadena.length);\r\n    return primerCaracter.concat(restoDeLaCadena);\r\n  };\r\n\r\n  const seleccionarPokemon = (pokemon_seleccionado) => {\r\n    setPokemon(pokemon_seleccionado)\r\n    setPosiblesBusquedas([])\r\n    refBuscador.current.value = pokemon_seleccionado.name;\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {loading && (\r\n        <div className=\"container-loader\">\r\n          <div className=\"loader\"></div>\r\n          <p className=\"message\">Obteniendo pokemones</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"container\">\r\n      <div className=\"title-container\">\r\n      <div className=\"pokedex\"> <img src={pokedex} alt=\"pokedex\"/></div>\r\n        <h1 className=\"title\">Busca tu pokemón!</h1>\r\n\r\n      </div>\r\n\r\n        <input\r\n          placeholder=\" Pokemon\"\r\n          type=\"search\"\r\n          onChange={handleInput}\r\n          onClick={handleInput}\r\n          ref={refBuscador}\r\n        />\r\n        {posiblesBusquedas.length !== 0 && (\r\n          <div className=\"lista-busquedas\">\r\n            {posiblesBusquedas.sort().map((p) => (\r\n              <PokemonSugerido\r\n                myOnClick={()=>{seleccionarPokemon(p)}}\r\n                key={p.name}\r\n                pokemon={p}\r\n              ></PokemonSugerido>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {pokemon !== null && (\r\n          <article>\r\n            <figure>\r\n              {pokemon.avatar}\r\n              <figcaption>\r\n                <p>{primeraLetraMayuscula(pokemon.name)}</p>\r\n              </figcaption>\r\n            </figure>\r\n          </article>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst PokemonSugerido = ({ pokemon,myOnClick }) => {\r\n  return (\r\n    <li id={pokemon.name} onClick={myOnClick}>\r\n      <p>{pokemon.name}</p> <span>{pokemon.avatar}</span>\r\n    </li>\r\n  );\r\n};\r\nexport default ListaPokemones;\r\n","\nimport './App.css';\nimport ListaPokemones from './components/ListaPokemones'\nfunction App() {\n  return (\n    <ListaPokemones></ListaPokemones>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}