{"version":3,"sources":["components/ListaPokemones.js","App.js","reportWebVitals.js","index.js"],"names":["ListaPokemones","useState","pokemones","setPokemones","pokemon","setPokemon","loading","setLoading","useEffect","a","url","pokemons","json","next","fetch","res","console","log","results","forEach","element","json_pokemon","img","src","sprites","front_default","alt","poke","name","avatar","push","p","getPokemon","className","placeholder","type","onChange","e","nombre","target","value","toLowerCase","cadena","primerCaracter","charAt","toUpperCase","restoDeLaCadena","substring","length","concat","primeraLetraMayuscula","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAoFeA,EAlFQ,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACpBC,EADoB,KACTC,EADS,OAEGF,mBAAS,MAFZ,mBAEpBG,EAFoB,KAEXC,EAFW,OAGGJ,oBAAS,GAHZ,mBAGpBK,EAHoB,KAGXC,EAHW,KAK3BC,qBAAU,YACQ,uCAAG,kCAAAC,EAAA,sDACbC,EAAM,uDACNC,EAAW,GACXC,EAAO,CAAEC,KAAM,GAHF,UAIG,MAAbD,EAAKC,KAJK,iCAKCC,MAAMJ,GALP,cAKXK,EALW,gBAMFA,EAAIH,OANF,OAMfA,EANe,OAOfI,QAAQC,IAAIL,GACZA,EAAKM,QAAQC,QAAb,uCAAqB,WAAOC,GAAP,qBAAAX,EAAA,sEACHK,MAAMM,EAAQV,KADX,cACfK,EADe,gBAEIA,EAAIH,OAFR,OAEjBS,EAFiB,OAIfC,EAAO,qBAAKC,IAAKF,EAAaG,QAAQC,cAAeC,IAAI,YACzDC,EAAO,CACTC,KAAMR,EAAQQ,KACdC,OAAQP,GAEVX,EAASmB,KAAKH,GATK,2CAArB,uDAYAjB,EAAME,EAAKC,KAEXV,GAAa,SAAC4B,GAAD,OAAOpB,KACH,MAAbC,EAAKC,MACPN,GAAW,GAxBE,2DAAH,qDA4BhByB,KACC,IAgBH,OACE,eAAC,WAAD,WACG1B,GACC,sBAAK2B,UAAU,mBAAf,UACE,qBAAKA,UAAU,WACf,2DAIJ,sBAAKA,UAAU,YAAf,UACE,sDAEA,uBACEC,YAAY,qBACZC,KAAK,SACLC,SA7BkB,SAACC,GACzB,IAAIC,EAASD,EAAEE,OAAOC,MAAMC,cAC5BvC,EAAUiB,SAAQ,SAACkB,GACbA,EAAET,OAASU,GACbjC,EAAWgC,SA2BC,MAAXjC,GACC,kCAEE,mCACDA,EAAQyB,OACT,2CAAa,4BA3BS,SAACa,GAC7B,IAAMC,EAAiBD,EAAOE,OAAO,GAAGC,cAClCC,EAAkBJ,EAAOK,UAAU,EAAGL,EAAOM,QACnD,OAAOL,EAAeM,OAAOH,GAwBNI,CAAsB9C,EAAQwB,uBClE1CuB,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b47fc6ca.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\n\r\nconst ListaPokemones = () => {\r\n  const [pokemones, setPokemones] = useState([]);\r\n  const [pokemon, setPokemon] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getPokemon = async () => {\r\n      let url = \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=100\";\r\n      let pokemons = [];\r\n      let json = { next: 2 };\r\n      while (json.next != null) {\r\n        let res = await fetch(url);\r\n        json = await res.json();\r\n        console.log(json)\r\n        json.results.forEach(async (element) => {\r\n          let res = await fetch(element.url),\r\n            json_pokemon = await res.json();\r\n        \r\n          let img = (<img src={json_pokemon.sprites.front_default} alt=\"pokemon\" />);\r\n          let poke = {\r\n            name: element.name,\r\n            avatar: img,\r\n          };\r\n          pokemons.push(poke);\r\n        });\r\n\r\n        url = json.next;\r\n        \r\n        setPokemones((p) => pokemons);\r\n        if (json.next == null) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n    getPokemon();\r\n  }, []);\r\n\r\n  const handleChangeInput = (e) => {\r\n    let nombre = e.target.value.toLowerCase();\r\n    pokemones.forEach((e) => {\r\n      if (e.name === nombre) {\r\n        setPokemon(e);\r\n      }\r\n    });\r\n  };\r\n\r\n  const primeraLetraMayuscula = (cadena) => {\r\n    const primerCaracter = cadena.charAt(0).toUpperCase();\r\n    const restoDeLaCadena = cadena.substring(1, cadena.length);\r\n    return primerCaracter.concat(restoDeLaCadena);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {loading && (\r\n        <div className=\"container-loader\">\r\n          <div className=\"loader\"></div>\r\n          <p>Obteniendo pokemones...</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"container\">\r\n        <h1>Busca tu pokem√≥n!</h1>\r\n\r\n        <input\r\n          placeholder=\"Nombre del pokemon\"\r\n          type=\"search\"\r\n          onChange={handleChangeInput}\r\n        />\r\n        {pokemon != null && (\r\n          <article>\r\n           \r\n            <figure>\r\n          {pokemon.avatar}\r\n          <figcaption> <p>{primeraLetraMayuscula(pokemon.name)}</p></figcaption>\r\n            </figure>\r\n          </article>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListaPokemones;\r\n","\nimport './App.css';\nimport ListaPokemones from './components/ListaPokemones'\nfunction App() {\n  return (\n    <ListaPokemones></ListaPokemones>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}