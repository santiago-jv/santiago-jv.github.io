{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Nota","props","className","class","description","App","React","useState","notes","setNotes","note","setNote","onChange","e","target","value","placeholder","type","onClick","console","log","title","alert","length","map","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAwCMA,EAAO,SAACC,GACZ,OAAO,sBAAKC,UAAU,OAAf,UACP,oBAAIA,UAAU,aAAd,SAA4BD,EAAME,QAC7B,qBAAKD,UAAU,mBAAf,SAAmCD,EAAMG,kBAIjCC,EA5CH,WAAO,IAAD,EACUC,IAAMC,SAAS,IADzB,mBACTC,EADS,KACFC,EADE,OAEQH,IAAMC,SAAS,CAACJ,MAAM,GAAIC,YAAY,KAF9C,mBAETM,EAFS,KAEHC,EAFG,KAahB,OACE,sBAAKT,UAAU,gBAAf,UACE,oBAAIA,UAAU,YAAd,uBACC,uBACCA,UAAU,cACVU,SAAU,SAACC,GAAKF,EAAQ,2BAAID,GAAL,IAAWP,MAAMU,EAAEC,OAAOC,UACjDC,YAAY,qBACZC,KAAK,SAEP,0BAAUf,UAAU,oBAAqBU,SAAU,SAACC,GAChDF,EAAQ,2BAAID,GAAL,IAAUN,YAAcS,EAAEC,OAAOC,UACvCC,YAAY,qBACjB,wBAAQE,QArBI,WACdC,QAAQC,IAAIV,GACM,IAAdA,EAAKW,OAA6B,IAAdX,EAAKP,MAC3BM,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KAEpBY,MAAM,qBAgBN,0BAEA,sBAAKpB,UAAU,iBAAf,UACmB,GAAhBM,EAAMe,QAAe,oBAAIrB,UAAU,aAAd,4BACrBM,EAAMgB,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,EAAD,CAAkBvB,MAAOsB,EAAKtB,MAAOC,YAAaqB,EAAKrB,aAA5CsB,aCrBNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.052a6bef.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { Fragment } from \"react\";\n\nconst App = () => {\n  const [notes, setNotes] = React.useState([]);\n  const [note, setNote] = React.useState({class:'', description:''});\n\n  const agregar = () => {\n    console.log(note);\n    if (note.title != \"\" && note.class != '') {\n      setNotes([...notes, note]);\n    } else {\n      alert(\"Ingresa una nota\");\n    }\n  };\n\n  return (\n    <div className=\"container-app\">\n      <h1 className=\"title-app\">Mis notas</h1>\n       <input\n        className=\"input-class\"\n        onChange={(e)=>{setNote({...note, class:e.target.value})}}\n        placeholder=\"Nombre de la clase\"\n        type=\"text\"\n      /> \n      <textarea className=\"input-description\"  onChange={(e) => {\n          setNote({...note,description : e.target.value});\n        }} placeholder=\"Nota de la clase\"></textarea>\n      <button onClick={agregar}>Agregar nota</button>\n\n      <div className=\"list-container\">\n        {notes.length != 0 && <h1 className=\"list-title\">Lista de Notas</h1>}\n        {notes.map((item, index) => (\n          <Nota key={index} class={item.class} description={item.description} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Nota = (props) => {\n  return <div className='item'>\n  <h1 className='class-item'>{props.class}</h1>\n       <pre className=\"description-item\">{props.description}</pre>\n  </div>\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}